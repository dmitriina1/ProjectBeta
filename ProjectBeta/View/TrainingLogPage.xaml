<Page x:Class="ProjectBeta.View.TrainingLogPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjectBeta.View"
      xmlns:entities="clr-namespace:ProjectBeta.Entities"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="1000"
      Title="TrainingLogPage">
    <Page.Resources>
        <ControlTemplate x:Key="HidBtns" TargetType="Button">
            <Grid x:Name="HidBtn" Margin="10,0,0,0" Height="40" >
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"
                               Background="LightGray"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="#FF9D9999"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                      
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" Margin="-3,0,0,0" 
                           VerticalAlignment="Center" FontSize="15" FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                    <Setter Property="Margin" Value="0, 2, 0, 0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>
        
        <ControlTemplate x:Key="AddBtns" TargetType="Button">
            <Grid x:Name="Btn" Margin="20,0,0,0" Height="40" >
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"
                               Background="Transparent" FontSize="23"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver,ElementName=Btn}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="#FF9D9999"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" Margin="-3,0,0,0" 
                           VerticalAlignment="Center" FontSize="23" FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                    <Setter Property="Margin" Value="0, 2, 0, 0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Background="Transparent"
                                   Opacity="0.2"
                                   AutomationProperties.AutomationId="VerticalScrollBar" 
                                   Cursor="Arrow" 
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Minimum="0" 
                                   Grid.Row="0" 
                                   Visibility="Collapsed"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Opacity="0.2"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow" 
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0" 
                                   Orientation="Horizontal"
                                   Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0.2" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation To="0.2" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.142*"/>
            <RowDefinition Height="0.1*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid x:Name="Infos"  Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.Background>
                <SolidColorBrush Color="White" Opacity="0.5"/>
            </Grid.Background>
            <Button Template="{StaticResource ResourceKey=AddBtns}"  Margin="10,0,0,0"   HorizontalAlignment="Left" FontSize="20">
                Сгенерировать тренировку
            </Button>
            <Button x:Name="AddTraining" Template="{StaticResource ResourceKey=AddBtns}" HorizontalAlignment="Right" FontSize="20" Click="AddTraining_Click" >
                Добавить тренировку
            </Button>
        </Grid>

        <ListBox ItemsSource="{Binding DaysOfTreinee, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                 x:Name="ltbx" ScrollViewer.CanContentScroll="False" Grid.Row="2" BorderThickness="0" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="entities:Days">
                    <Border Background="White" CornerRadius="5" BorderBrush="White" BorderThickness="10" SnapsToDevicePixels="True" UseLayoutRounding="True" Margin="5, 10, 5, 0">
                        <StackPanel x:Name="Hidden" Background = "White" HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                             
                                <Label
                                    Grid.Column="0"
                                    x:Name="DayOfTrening" 
                                    Content="{Binding Num}"
                                    HorizontalAlignment="Left"
                                    FontSize="20"
                                    Foreground="Black" 
                                    FontWeight="Bold" />
                               
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <Button VerticalAlignment="Center" Width="125" Template="{StaticResource ResourceKey=HidBtns}" FontSize="15"  Content="  Удалить день"/>
                                    <Button x:Name="btndelete" Width="175" VerticalAlignment="Center" Template="{StaticResource ResourceKey=HidBtns}" FontSize="15"  Content=" Удалить упражнение" Click="btndelete_Click"/>
                                    <Button x:Name="btnadd" Width="185" Template="{StaticResource ResourceKey=HidBtns}" VerticalAlignment="Center" FontSize="15"  Content=" Добавить упражнение" Click="btnadd_Click"/>
                                </StackPanel>                                
                            </Grid>
                            <ListBox x:Name="ListTest" ItemsSource="{Binding Exercises, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <ContentPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Resources>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius" Value="5"/>
                                            </Style>
                                        </Style.Resources>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="entities:Exercise">
                                        <Border Background="White" CornerRadius="5" BorderBrush="White" BorderThickness="10" SnapsToDevicePixels="True" UseLayoutRounding="True" Margin="5, 0, 5, 0">
                                                <Grid Background = "White"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <ComboBox Height="30" Grid.Column="0" Margin="5,0,5,0" SelectedIndex="{Binding Ex}" VerticalAlignment="Top">
                                                    <ComboBoxItem>Отжимания</ComboBoxItem>
                                                    <ComboBoxItem>Приседания</ComboBoxItem>
                                                    <ComboBoxItem>Подтягивания</ComboBoxItem>
                                                    <ComboBoxItem>Подъем ног</ComboBoxItem>
                                                    <ComboBoxItem>Мостик</ComboBoxItem>
                                                    <ComboBoxItem>Отжимания в стойке на руках</ComboBoxItem>
                                                </ComboBox>
                                                <ComboBox Height="30" Grid.Column="1" Margin="5,0,5,0" SelectedIndex="{Binding Round}" VerticalAlignment="Top"/>
                                                <ComboBox Height="30" Grid.Column="2" Margin="5,0,5,0" SelectedIndex="{Binding Reps}" VerticalAlignment="Top"/>
                                                <TextBox Grid.Column="3" FontSize="13" Margin="5,0,5,0" Text="{Binding Comment}" VerticalAlignment="Top" TextWrapping="Wrap" AcceptsReturn="True"/>
                                                </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>                        
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Page>
